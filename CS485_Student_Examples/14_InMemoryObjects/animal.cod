; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\chadd\Desktop\CS485_Examples\14_InMemoryObjects\animal.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5373	DB	'HI', 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_printf
PUBLIC	??0animal@@QAE@XZ				; animal::animal
PUBLIC	??0animal@@QAE@H@Z				; animal::animal
PUBLIC	?getWeight@animal@@QAEHXZ			; animal::getWeight
PUBLIC	?setWeight@animal@@QAEXPAH@Z			; animal::setWeight
PUBLIC	?eat@animal@@UAEHAAV1@@Z			; animal::eat
PUBLIC	?hi@animal@@UAEXXZ				; animal::hi
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7animal@@6B@					; animal::`vftable'
PUBLIC	??_R4animal@@6B@				; animal::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVanimal@@@8				; animal `RTTI Type Descriptor'
PUBLIC	??_R3animal@@8					; animal::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2animal@@8					; animal::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@animal@@8				; animal::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3feccccccccccccd
EXTRN	__purecall:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@animal@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@animal@@8 DD FLAT:??_R0?AVanimal@@@8	; animal::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3animal@@8
rdata$r	ENDS
;	COMDAT ??_R2animal@@8
rdata$r	SEGMENT
??_R2animal@@8 DD FLAT:??_R1A@?0A@EA@animal@@8		; animal::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3animal@@8
rdata$r	SEGMENT
??_R3animal@@8 DD 00H					; animal::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2animal@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVanimal@@@8
data$r	SEGMENT
??_R0?AVanimal@@@8 DD FLAT:??_7type_info@@6B@		; animal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVanimal@@', 00H
data$r	ENDS
;	COMDAT ??_R4animal@@6B@
rdata$r	SEGMENT
??_R4animal@@6B@ DD 00H					; animal::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVanimal@@@8
	DD	FLAT:??_R3animal@@8
rdata$r	ENDS
;	COMDAT ??_7animal@@6B@
CONST	SEGMENT
??_7animal@@6B@ DD FLAT:??_R4animal@@6B@		; animal::`vftable'
	DD	FLAT:?eat@animal@@UAEHAAV1@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hi@animal@@UAEXXZ
CONST	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?hi@animal@@UAEXXZ PROC					; animal::hi
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	printf("HI");

  00007	68 00 00 00 00	 push	 OFFSET $SG5373
  0000c	e8 00 00 00 00	 call	 _printf
  00011	83 c4 04	 add	 esp, 4

; 45   : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?hi@animal@@UAEXXZ ENDP					; animal::hi
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pA$ = 8						; size = 4
?eat@animal@@UAEHAAV1@@Z PROC				; animal::eat
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 	// it takes 10% of the weight of the eaten animal to
; 82   : 	// digest that animal.
; 83   : 	mWeight += pA.getWeight() * 0.9;

  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pA$[ebp]
  0000a	e8 00 00 00 00	 call	 ?getWeight@animal@@QAEHXZ ; animal::getWeight
  0000f	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00013	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feccccccccccccd
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	f2 0f 2a 48 04	 cvtsi2sd xmm1, DWORD PTR [eax+4]
  00023	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00027	f2 0f 2c c9	 cvttsd2si ecx, xmm1
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 84   : 	pA.setWeight(0);

  00031	6a 00		 push	 0
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _pA$[ebp]
  00036	e8 00 00 00 00	 call	 ?setWeight@animal@@QAEXPAH@Z ; animal::setWeight

; 85   : 	return pA.getWeight();

  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _pA$[ebp]
  0003e	e8 00 00 00 00	 call	 ?getWeight@animal@@QAEHXZ ; animal::getWeight

; 86   : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?eat@animal@@UAEHAAV1@@Z ENDP				; animal::eat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
?setWeight@animal@@QAEXPAH@Z PROC			; animal::setWeight
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	mWeight = *w;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _w$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 69   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?setWeight@animal@@QAEXPAH@Z ENDP			; animal::setWeight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getWeight@animal@@QAEHXZ PROC				; animal::getWeight
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	return mWeight;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 56   : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getWeight@animal@@QAEHXZ ENDP				; animal::getWeight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
??0animal@@QAE@H@Z PROC					; animal::animal
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7animal@@6B@

; 33   : 	mWeight = w;

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _w$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 34   : }

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0animal@@QAE@H@Z ENDP					; animal::animal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\animal.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0animal@@QAE@XZ PROC					; animal::animal
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7animal@@6B@

; 22   : 	mWeight = -1;

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 23   : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0animal@@QAE@XZ ENDP					; animal::animal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);

  00006	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
  0000b	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax

; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR __ArgList$[ebp]
  00014	51		 push	 ecx
  00015	6a 00		 push	 0
  00017	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  0001a	52		 push	 edx
  0001b	6a 01		 push	 1
  0001d	e8 00 00 00 00	 call	 ___acrt_iob_func
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 __vfprintf_l
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 955  :     __crt_va_end(_ArgList);

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 956  :     return _Result;

  00038	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 957  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 144  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00003	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00018	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001b	51		 push	 ecx
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	52		 push	 edx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 640  : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
