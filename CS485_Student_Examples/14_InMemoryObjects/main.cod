; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\Users\chadd\Desktop\CS485_Examples\14_InMemoryObjects\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5406	DB	0aH, 'getWeight: %d', 0aH, 00H
$SG5407	DB	'getWeight2: %d', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_printf
PUBLIC	?foo@@YAHH@Z					; foo
PUBLIC	?foo@@YAHXZ					; foo
PUBLIC	?foo@@YAHM@Z					; foo
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	?getWeight@animal@@QAEHXZ:PROC			; animal::getWeight
EXTRN	??0cat@@QAE@H@Z:PROC				; cat::cat
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\main.cpp
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_pAn$ = -4						; size = 4
_main	PROC

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 30   :   animal *pAn = new cat(93);

  00006	6a 14		 push	 20			; 00000014H
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4
  00010	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00013	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00017	74 0f		 je	 SHORT $LN3@main
  00019	6a 5d		 push	 93			; 0000005dH
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0001e	e8 00 00 00 00	 call	 ??0cat@@QAE@H@Z		; cat::cat
  00023	89 45 f4	 mov	 DWORD PTR tv76[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN4@main
$LN3@main:
  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@main:
  0002f	8b 45 f4	 mov	 eax, DWORD PTR tv76[ebp]
  00032	89 45 fc	 mov	 DWORD PTR _pAn$[ebp], eax

; 31   :   pAn->makeSound();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	ff d0		 call	 eax

; 32   :   printf("\ngetWeight: %d\n",pAn->getWeight());

  00042	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  00045	e8 00 00 00 00	 call	 ?getWeight@animal@@QAEHXZ ; animal::getWeight
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET $SG5406
  00050	e8 00 00 00 00	 call	 _printf
  00055	83 c4 08	 add	 esp, 8

; 33   :   printf("getWeight2: %d\n",pAn->getWeight2());

  00058	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  00060	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00063	ff d0		 call	 eax
  00065	50		 push	 eax
  00066	68 00 00 00 00	 push	 OFFSET $SG5407
  0006b	e8 00 00 00 00	 call	 _printf
  00070	83 c4 08	 add	 esp, 8

; 34   :   pAn->hi();

  00073	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _pAn$[ebp]
  0007b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007e	ff d0		 call	 eax

; 35   :   //pAn->bye();     // ????
; 36   : }

  00080	33 c0		 xor	 eax, eax
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\main.cpp
_TEXT	SEGMENT
_z$ = 8							; size = 4
?foo@@YAHM@Z PROC					; foo

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   :   return 42;

  00003	b8 2a 00 00 00	 mov	 eax, 42			; 0000002aH

; 26   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?foo@@YAHM@Z ENDP					; foo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\main.cpp
_TEXT	SEGMENT
?foo@@YAHXZ PROC					; foo

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 20   :   return 42;

  00003	b8 2a 00 00 00	 mov	 eax, 42			; 0000002aH

; 21   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?foo@@YAHXZ ENDP					; foo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\chadd\desktop\cs485_examples\14_inmemoryobjects\main.cpp
_TEXT	SEGMENT
_x$ = 8							; size = 4
?foo@@YAHH@Z PROC					; foo

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 15   :   return 42;

  00003	b8 2a 00 00 00	 mov	 eax, 42			; 0000002aH

; 16   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?foo@@YAHH@Z ENDP					; foo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);

  00006	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
  0000b	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax

; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR __ArgList$[ebp]
  00014	51		 push	 ecx
  00015	6a 00		 push	 0
  00017	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  0001a	52		 push	 edx
  0001b	6a 01		 push	 1
  0001d	e8 00 00 00 00	 call	 ___acrt_iob_func
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 __vfprintf_l
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 955  :     __crt_va_end(_ArgList);

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 956  :     return _Result;

  00038	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 957  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 144  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00003	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00018	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001b	51		 push	 ecx
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	52		 push	 edx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 640  : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
